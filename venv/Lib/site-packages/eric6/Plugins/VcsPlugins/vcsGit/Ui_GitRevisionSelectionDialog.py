# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'eric\eric6\Plugins\VcsPlugins\vcsGit\GitRevisionSelectionDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_GitRevisionSelectionDialog(object):
    def setupUi(self, GitRevisionSelectionDialog):
        GitRevisionSelectionDialog.setObjectName("GitRevisionSelectionDialog")
        GitRevisionSelectionDialog.resize(450, 224)
        GitRevisionSelectionDialog.setSizeGripEnabled(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(GitRevisionSelectionDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(GitRevisionSelectionDialog)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.revButton = QtWidgets.QRadioButton(self.groupBox)
        self.revButton.setObjectName("revButton")
        self.gridLayout.addWidget(self.revButton, 0, 0, 1, 1)
        self.revEdit = QtWidgets.QLineEdit(self.groupBox)
        self.revEdit.setEnabled(False)
        self.revEdit.setObjectName("revEdit")
        self.gridLayout.addWidget(self.revEdit, 0, 1, 1, 1)
        self.tagButton = QtWidgets.QRadioButton(self.groupBox)
        self.tagButton.setObjectName("tagButton")
        self.gridLayout.addWidget(self.tagButton, 1, 0, 1, 1)
        self.tagCombo = QtWidgets.QComboBox(self.groupBox)
        self.tagCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tagCombo.sizePolicy().hasHeightForWidth())
        self.tagCombo.setSizePolicy(sizePolicy)
        self.tagCombo.setEditable(True)
        self.tagCombo.setObjectName("tagCombo")
        self.gridLayout.addWidget(self.tagCombo, 1, 1, 1, 1)
        self.branchButton = QtWidgets.QRadioButton(self.groupBox)
        self.branchButton.setObjectName("branchButton")
        self.gridLayout.addWidget(self.branchButton, 2, 0, 1, 1)
        self.branchCombo = QtWidgets.QComboBox(self.groupBox)
        self.branchCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.branchCombo.sizePolicy().hasHeightForWidth())
        self.branchCombo.setSizePolicy(sizePolicy)
        self.branchCombo.setEditable(True)
        self.branchCombo.setObjectName("branchCombo")
        self.gridLayout.addWidget(self.branchCombo, 2, 1, 1, 1)
        self.remoteBranchButton = QtWidgets.QRadioButton(self.groupBox)
        self.remoteBranchButton.setObjectName("remoteBranchButton")
        self.gridLayout.addWidget(self.remoteBranchButton, 3, 0, 1, 1)
        self.remoteBranchCombo = QtWidgets.QComboBox(self.groupBox)
        self.remoteBranchCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.remoteBranchCombo.sizePolicy().hasHeightForWidth())
        self.remoteBranchCombo.setSizePolicy(sizePolicy)
        self.remoteBranchCombo.setEditable(True)
        self.remoteBranchCombo.setObjectName("remoteBranchCombo")
        self.gridLayout.addWidget(self.remoteBranchCombo, 3, 1, 1, 1)
        self.tipButton = QtWidgets.QRadioButton(self.groupBox)
        self.tipButton.setObjectName("tipButton")
        self.gridLayout.addWidget(self.tipButton, 4, 0, 1, 2)
        self.noneButton = QtWidgets.QRadioButton(self.groupBox)
        self.noneButton.setChecked(True)
        self.noneButton.setObjectName("noneButton")
        self.gridLayout.addWidget(self.noneButton, 5, 0, 1, 2)
        self.verticalLayout.addWidget(self.groupBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(GitRevisionSelectionDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(GitRevisionSelectionDialog)
        self.buttonBox.accepted.connect(GitRevisionSelectionDialog.accept)
        self.buttonBox.rejected.connect(GitRevisionSelectionDialog.reject)
        self.revButton.toggled['bool'].connect(self.revEdit.setEnabled)
        self.tagButton.toggled['bool'].connect(self.tagCombo.setEnabled)
        self.branchButton.toggled['bool'].connect(self.branchCombo.setEnabled)
        self.remoteBranchButton.toggled['bool'].connect(self.remoteBranchCombo.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(GitRevisionSelectionDialog)
        GitRevisionSelectionDialog.setTabOrder(self.revButton, self.revEdit)
        GitRevisionSelectionDialog.setTabOrder(self.revEdit, self.tagButton)
        GitRevisionSelectionDialog.setTabOrder(self.tagButton, self.tagCombo)
        GitRevisionSelectionDialog.setTabOrder(self.tagCombo, self.branchButton)
        GitRevisionSelectionDialog.setTabOrder(self.branchButton, self.branchCombo)
        GitRevisionSelectionDialog.setTabOrder(self.branchCombo, self.remoteBranchButton)
        GitRevisionSelectionDialog.setTabOrder(self.remoteBranchButton, self.remoteBranchCombo)
        GitRevisionSelectionDialog.setTabOrder(self.remoteBranchCombo, self.tipButton)
        GitRevisionSelectionDialog.setTabOrder(self.tipButton, self.noneButton)

    def retranslateUi(self, GitRevisionSelectionDialog):
        _translate = QtCore.QCoreApplication.translate
        GitRevisionSelectionDialog.setWindowTitle(_translate("GitRevisionSelectionDialog", "Git Revision"))
        self.groupBox.setTitle(_translate("GitRevisionSelectionDialog", "Revision"))
        self.revButton.setToolTip(_translate("GitRevisionSelectionDialog", "Select to specify a revision by a revision expression"))
        self.revButton.setText(_translate("GitRevisionSelectionDialog", "Commit:"))
        self.revEdit.setToolTip(_translate("GitRevisionSelectionDialog", "Enter a commit id"))
        self.tagButton.setToolTip(_translate("GitRevisionSelectionDialog", "Select to specify a revision by a tag"))
        self.tagButton.setText(_translate("GitRevisionSelectionDialog", "Tag:"))
        self.tagCombo.setToolTip(_translate("GitRevisionSelectionDialog", "Enter a tag name"))
        self.branchButton.setToolTip(_translate("GitRevisionSelectionDialog", "Select to specify a revision by a branch"))
        self.branchButton.setText(_translate("GitRevisionSelectionDialog", "Branch:"))
        self.branchCombo.setToolTip(_translate("GitRevisionSelectionDialog", "Enter a branch name"))
        self.remoteBranchButton.setToolTip(_translate("GitRevisionSelectionDialog", "Select to specify a revision by a remote branch"))
        self.remoteBranchButton.setText(_translate("GitRevisionSelectionDialog", "Remote Branch:"))
        self.remoteBranchCombo.setToolTip(_translate("GitRevisionSelectionDialog", "Enter a remote branch name"))
        self.tipButton.setToolTip(_translate("GitRevisionSelectionDialog", "Select HEAD revision"))
        self.tipButton.setText(_translate("GitRevisionSelectionDialog", "HEAD"))
        self.noneButton.setText(_translate("GitRevisionSelectionDialog", "No revision selected"))
