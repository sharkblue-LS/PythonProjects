# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'eric\eric6\Plugins\VcsPlugins\vcsGit\GitMergeDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_GitMergeDialog(object):
    def setupUi(self, GitMergeDialog):
        GitMergeDialog.setObjectName("GitMergeDialog")
        GitMergeDialog.resize(451, 491)
        GitMergeDialog.setSizeGripEnabled(True)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(GitMergeDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(GitMergeDialog)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.idButton = QtWidgets.QRadioButton(self.groupBox)
        self.idButton.setObjectName("idButton")
        self.gridLayout.addWidget(self.idButton, 0, 0, 1, 1)
        self.idEdit = QtWidgets.QLineEdit(self.groupBox)
        self.idEdit.setEnabled(False)
        self.idEdit.setObjectName("idEdit")
        self.gridLayout.addWidget(self.idEdit, 0, 1, 1, 1)
        self.tagButton = QtWidgets.QRadioButton(self.groupBox)
        self.tagButton.setObjectName("tagButton")
        self.gridLayout.addWidget(self.tagButton, 1, 0, 1, 1)
        self.tagCombo = QtWidgets.QComboBox(self.groupBox)
        self.tagCombo.setEnabled(False)
        self.tagCombo.setEditable(True)
        self.tagCombo.setObjectName("tagCombo")
        self.gridLayout.addWidget(self.tagCombo, 1, 1, 1, 1)
        self.branchButton = QtWidgets.QRadioButton(self.groupBox)
        self.branchButton.setObjectName("branchButton")
        self.gridLayout.addWidget(self.branchButton, 2, 0, 1, 1)
        self.branchCombo = QtWidgets.QComboBox(self.groupBox)
        self.branchCombo.setEnabled(False)
        self.branchCombo.setEditable(True)
        self.branchCombo.setObjectName("branchCombo")
        self.gridLayout.addWidget(self.branchCombo, 2, 1, 1, 1)
        self.remoteBranchButton = QtWidgets.QRadioButton(self.groupBox)
        self.remoteBranchButton.setObjectName("remoteBranchButton")
        self.gridLayout.addWidget(self.remoteBranchButton, 3, 0, 1, 1)
        self.remoteBranchCombo = QtWidgets.QComboBox(self.groupBox)
        self.remoteBranchCombo.setEnabled(False)
        self.remoteBranchCombo.setEditable(True)
        self.remoteBranchCombo.setObjectName("remoteBranchCombo")
        self.gridLayout.addWidget(self.remoteBranchCombo, 3, 1, 1, 1)
        self.noneButton = QtWidgets.QRadioButton(self.groupBox)
        self.noneButton.setChecked(True)
        self.noneButton.setObjectName("noneButton")
        self.gridLayout.addWidget(self.noneButton, 4, 0, 1, 2)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.commitGroupBox = QtWidgets.QGroupBox(GitMergeDialog)
        self.commitGroupBox.setCheckable(True)
        self.commitGroupBox.setObjectName("commitGroupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.commitGroupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.commitGroupBox)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.commitMessageEdit = QtWidgets.QPlainTextEdit(self.commitGroupBox)
        self.commitMessageEdit.setTabChangesFocus(True)
        self.commitMessageEdit.setObjectName("commitMessageEdit")
        self.verticalLayout.addWidget(self.commitMessageEdit)
        self.addLogCheckBox = QtWidgets.QCheckBox(self.commitGroupBox)
        self.addLogCheckBox.setObjectName("addLogCheckBox")
        self.verticalLayout.addWidget(self.addLogCheckBox)
        self.verticalLayout_2.addWidget(self.commitGroupBox)
        self.diffstatCheckBox = QtWidgets.QCheckBox(GitMergeDialog)
        self.diffstatCheckBox.setObjectName("diffstatCheckBox")
        self.verticalLayout_2.addWidget(self.diffstatCheckBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(GitMergeDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)

        self.retranslateUi(GitMergeDialog)
        self.buttonBox.accepted.connect(GitMergeDialog.accept)
        self.buttonBox.rejected.connect(GitMergeDialog.reject)
        self.idButton.toggled['bool'].connect(self.idEdit.setEnabled)
        self.tagButton.toggled['bool'].connect(self.tagCombo.setEnabled)
        self.branchButton.toggled['bool'].connect(self.branchCombo.setEnabled)
        self.remoteBranchButton.toggled['bool'].connect(self.remoteBranchCombo.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(GitMergeDialog)
        GitMergeDialog.setTabOrder(self.idButton, self.idEdit)
        GitMergeDialog.setTabOrder(self.idEdit, self.tagButton)
        GitMergeDialog.setTabOrder(self.tagButton, self.tagCombo)
        GitMergeDialog.setTabOrder(self.tagCombo, self.branchButton)
        GitMergeDialog.setTabOrder(self.branchButton, self.branchCombo)
        GitMergeDialog.setTabOrder(self.branchCombo, self.remoteBranchButton)
        GitMergeDialog.setTabOrder(self.remoteBranchButton, self.remoteBranchCombo)
        GitMergeDialog.setTabOrder(self.remoteBranchCombo, self.noneButton)
        GitMergeDialog.setTabOrder(self.noneButton, self.commitGroupBox)
        GitMergeDialog.setTabOrder(self.commitGroupBox, self.commitMessageEdit)
        GitMergeDialog.setTabOrder(self.commitMessageEdit, self.addLogCheckBox)
        GitMergeDialog.setTabOrder(self.addLogCheckBox, self.diffstatCheckBox)

    def retranslateUi(self, GitMergeDialog):
        _translate = QtCore.QCoreApplication.translate
        GitMergeDialog.setWindowTitle(_translate("GitMergeDialog", "Git Merge"))
        self.groupBox.setTitle(_translate("GitMergeDialog", "Revision"))
        self.idButton.setToolTip(_translate("GitMergeDialog", "Select to specify a revision by changeset id"))
        self.idButton.setText(_translate("GitMergeDialog", "Commit:"))
        self.idEdit.setToolTip(_translate("GitMergeDialog", "Enter a commit id"))
        self.tagButton.setToolTip(_translate("GitMergeDialog", "Select to specify a revision by a tag"))
        self.tagButton.setText(_translate("GitMergeDialog", "Tag:"))
        self.tagCombo.setToolTip(_translate("GitMergeDialog", "Enter a tag name"))
        self.branchButton.setToolTip(_translate("GitMergeDialog", "Select to specify a revision by a local branch"))
        self.branchButton.setText(_translate("GitMergeDialog", "Local Branch:"))
        self.branchCombo.setToolTip(_translate("GitMergeDialog", "Enter a local branch name"))
        self.remoteBranchButton.setToolTip(_translate("GitMergeDialog", "Select to specify a revision by a remote branch"))
        self.remoteBranchButton.setText(_translate("GitMergeDialog", "Remote Branch:"))
        self.remoteBranchCombo.setToolTip(_translate("GitMergeDialog", "Enter a remote branch name"))
        self.noneButton.setToolTip(_translate("GitMergeDialog", "Select to not specify a specific revision"))
        self.noneButton.setText(_translate("GitMergeDialog", "No commit selected"))
        self.commitGroupBox.setToolTip(_translate("GitMergeDialog", "Select to commit the merge"))
        self.commitGroupBox.setTitle(_translate("GitMergeDialog", "Commit Merge"))
        self.label.setText(_translate("GitMergeDialog", "Commit Message:"))
        self.commitMessageEdit.setToolTip(_translate("GitMergeDialog", "Enter a message for the merge commit"))
        self.addLogCheckBox.setToolTip(_translate("GitMergeDialog", "Select to append the log summaries of merged commits"))
        self.addLogCheckBox.setText(_translate("GitMergeDialog", "Add Log Message Summary"))
        self.diffstatCheckBox.setToolTip(_translate("GitMergeDialog", "Select to show diff statistics at the end of the merge"))
        self.diffstatCheckBox.setText(_translate("GitMergeDialog", "Show diff statistics"))
